// <auto-generated />
using System;
using Capa_Logica_Negocio.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capa_Logica_Negocio.Migrations
{
    [DbContext(typeof(ClinicaDBContext))]
    [Migration("20211119012742_AnexoConusltasFactura")]
    partial class AnexoConusltasFactura
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capa_Logica_Negocio.Models.CitaModel", b =>
                {
                    b.Property<int>("Id_Cita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado_Cita")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Cita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Programacion_Cita")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente_Cita")
                        .HasColumnType("int");

                    b.Property<int>("IdOftalmologo_Cita")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente_Cita")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoConsulta_Cita")
                        .HasColumnType("int");

                    b.HasKey("Id_Cita");

                    b.HasIndex("IdCliente_Cita");

                    b.HasIndex("IdOftalmologo_Cita");

                    b.HasIndex("IdPaciente_Cita");

                    b.HasIndex("IdTipoConsulta_Cita");

                    b.ToTable("tbl_Cita");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.ClienteModel", b =>
                {
                    b.Property<int>("Id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos_Cliente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Direccion_Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres_Cliente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono_Cliente")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id_Cliente");

                    b.ToTable("tbl_Cliente");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.ConsultaModel", b =>
                {
                    b.Property<int>("Id_Consulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cita_Cita_Previa_Consulta")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion_Consulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_Consulta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCita_Consulta")
                        .HasColumnType("int");

                    b.Property<int>("IdOftalmologo_Consulta")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente_Consulta")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoConsulta_Consulta")
                        .HasColumnType("int");

                    b.HasKey("Id_Consulta");

                    b.HasIndex("IdCita_Consulta");

                    b.HasIndex("IdOftalmologo_Consulta");

                    b.HasIndex("IdPaciente_Consulta");

                    b.HasIndex("IdTipoConsulta_Consulta");

                    b.ToTable("tbl_Consulta");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.CreditoConsultaModel", b =>
                {
                    b.Property<int>("Id_Credito_Consulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Decripcion_Credito_Consulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_Credito_Consulta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCuentaCliente_Credito_Consulta")
                        .HasColumnType("int");

                    b.Property<int>("IdFacturaConsulta_Credito_Consulta")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto_Credito_Consulta")
                        .HasColumnType("decimal (18,2)");

                    b.HasKey("Id_Credito_Consulta");

                    b.HasIndex("IdCuentaCliente_Credito_Consulta");

                    b.HasIndex("IdFacturaConsulta_Credito_Consulta");

                    b.ToTable("tbl_Credito_Consulta");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.CuentaClienteModel", b =>
                {
                    b.Property<int>("Id_Cuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha_Cancelacion_Cuenta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Cuenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente_Cuenta")
                        .HasColumnType("int");

                    b.Property<bool>("Saldada")
                        .HasColumnType("bit");

                    b.Property<decimal>("Saldo_Cuenta")
                        .HasColumnType("decimal (18,4)");

                    b.HasKey("Id_Cuenta");

                    b.HasIndex("IdCliente_Cuenta");

                    b.ToTable("tbl_Cuenta_Cliente");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.FacturaConsultaModel", b =>
                {
                    b.Property<int>("Id_Factura_Consulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Acreditada_Factura_Consulta")
                        .HasColumnType("bit");

                    b.Property<decimal>("Deposito_Factura_Consulta")
                        .HasColumnType("decimal (18,4)");

                    b.Property<DateTime>("Fecha_Factura_Consulta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA_Factura_Consulta")
                        .HasColumnType("decimal (18,4)");

                    b.Property<int>("IdCita_Factura_Consulta")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente_Factura_Consulta")
                        .HasColumnType("int");

                    b.Property<int>("IdConsulta_Factura_Consulta")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal_Factura_Consulta")
                        .HasColumnType("decimal (18,4)");

                    b.Property<decimal>("Total_Factura_Consulta")
                        .HasColumnType("decimal (18,4)");

                    b.HasKey("Id_Factura_Consulta");

                    b.HasIndex("IdCita_Factura_Consulta");

                    b.HasIndex("IdCliente_Factura_Consulta");

                    b.HasIndex("IdConsulta_Factura_Consulta");

                    b.ToTable("tbl_Factura_Consulta");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.OftalmologoModel", b =>
                {
                    b.Property<int>("Id_Oftalmologo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos_Oftalmologo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Direccion_Oftalmologo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad_Oftalmologo")
                        .HasColumnType("int");

                    b.Property<string>("Especialidad_Oftalmologo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres_Oftalmologo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono_Oftalmologo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id_Oftalmologo");

                    b.ToTable("tbl_Oftalmologo");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.PacienteModel", b =>
                {
                    b.Property<int>("Id_Paciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos_Paciente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Direccion_Paciente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad_Paciente")
                        .HasColumnType("int");

                    b.Property<string>("Nombres_Paciente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono_Paciente")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id_Paciente");

                    b.ToTable("tbl_Paciente");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.PagoModel", b =>
                {
                    b.Property<int>("Id_Pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Concepto_Pago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_Pago")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCuenta_Pago")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto_Pago")
                        .HasColumnType("decimal (18,4)");

                    b.Property<string>("Pagador_Pago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Pago");

                    b.HasIndex("IdCuenta_Pago");

                    b.ToTable("tbl_Pago");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.TipoConsultaModel", b =>
                {
                    b.Property<int>("Id_Tipo_Consulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion_Tipo_Consulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio_Tipo_Consulta")
                        .HasColumnType("decimal (18,4)");

                    b.HasKey("Id_Tipo_Consulta");

                    b.ToTable("tbl_Tipo_Consulta");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.CitaModel", b =>
                {
                    b.HasOne("Capa_Logica_Negocio.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente_Cita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.OftalmologoModel", "Oftalmologo")
                        .WithMany()
                        .HasForeignKey("IdOftalmologo_Cita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.PacienteModel", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente_Cita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.TipoConsultaModel", "TipoConsulta")
                        .WithMany()
                        .HasForeignKey("IdTipoConsulta_Cita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Oftalmologo");

                    b.Navigation("Paciente");

                    b.Navigation("TipoConsulta");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.ConsultaModel", b =>
                {
                    b.HasOne("Capa_Logica_Negocio.Models.CitaModel", "Cita")
                        .WithMany()
                        .HasForeignKey("IdCita_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.OftalmologoModel", "Oftalmologo")
                        .WithMany()
                        .HasForeignKey("IdOftalmologo_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.PacienteModel", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.TipoConsultaModel", "TipoConsulta")
                        .WithMany()
                        .HasForeignKey("IdTipoConsulta_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Oftalmologo");

                    b.Navigation("Paciente");

                    b.Navigation("TipoConsulta");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.CreditoConsultaModel", b =>
                {
                    b.HasOne("Capa_Logica_Negocio.Models.CuentaClienteModel", "CuentaCliente")
                        .WithMany()
                        .HasForeignKey("IdCuentaCliente_Credito_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.FacturaConsultaModel", "FacturaConsulta")
                        .WithMany()
                        .HasForeignKey("IdFacturaConsulta_Credito_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuentaCliente");

                    b.Navigation("FacturaConsulta");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.CuentaClienteModel", b =>
                {
                    b.HasOne("Capa_Logica_Negocio.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente_Cuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.FacturaConsultaModel", b =>
                {
                    b.HasOne("Capa_Logica_Negocio.Models.CitaModel", "Cita")
                        .WithMany()
                        .HasForeignKey("IdCita_Factura_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente_Factura_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capa_Logica_Negocio.Models.ConsultaModel", "Consulta")
                        .WithMany()
                        .HasForeignKey("IdConsulta_Factura_Consulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Cliente");

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("Capa_Logica_Negocio.Models.PagoModel", b =>
                {
                    b.HasOne("Capa_Logica_Negocio.Models.CuentaClienteModel", "Cuenta")
                        .WithMany()
                        .HasForeignKey("IdCuenta_Pago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });
#pragma warning restore 612, 618
        }
    }
}
